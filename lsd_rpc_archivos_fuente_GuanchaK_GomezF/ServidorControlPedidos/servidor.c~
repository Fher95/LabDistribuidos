/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */
#include <stdlib.h>
#include <string.h>
#include "gestionHamburguesas.h"
int idClientes=1;
proxNodoHamburguesa cabeza = NULL, sigHamburguesa;
proxNodoHamburguesa nuevaHamburguesa;

int *
getidentificador_1_svc(void *argp, struct svc_req *rqstp)
{
	static int  result;	
	result=idClientes;
	idClientes++;
	return &result;
}

nodo_datos_empresa *
consultardatosempresa_1_svc(void *argp, struct svc_req *rqstp)
{
	static nodo_datos_empresa  result;

	FILE *archivo;
	char lineaLeida[100];
	archivo = fopen("datosEmpresa.txt","r");
	printf("\n Ejecutando Consulta de Precios. \n");
	if (archivo == NULL)
	{
		printf("Erro al abrir el archivo");
	} 		
	else
	{
			fgets(lineaLeida,100,archivo);
			strcpy(result.nombre,lineaLeida);
			fgets(lineaLeida,100,archivo);
			result.nit = atoi(lineaLeida);				
	}

	return &result;
}

nodo_costos_hamburguesa *
consultarcostoshamburguesa_1_svc(void *argp, struct svc_req *rqstp)
{
	static nodo_costos_hamburguesa  result;

	FILE *archivo;
	char lineaLeida[100];
	archivo = fopen("costoshamburguesa.txt","r");
	printf("\n Ejecutando Consulta de Precios. \n");
	if (archivo == NULL)
	{
		printf("Erro al abrir el archivo");
	} 		
	else
	{
			fgets(lineaLeida,100,archivo);


			result.costoHamburguesaPequenia = atof(lineaLeida);
			fgets(lineaLeida,100,archivo);
			result.costoHamburguesaMediana = atof(lineaLeida);
			fgets(lineaLeida,100,archivo);
			result.costoHamburguesaGrande = atof(lineaLeida);
			fgets(lineaLeida,100,archivo);
			result.costoIngredientesExtra = atof(lineaLeida);
	
	}

	return &result;
}

bool_t *
comprarhamburguesasistema_1_svc(nodo_hamburguesa_factura *argp, struct svc_req *rqstp)
{
	static bool_t  result;

	printf("\n Ejecutando Compra de Hamburguesas. \n");
	printf("	Nombre: %s \n", (*argp).nombre);
	printf("	Cantidad Ingredientes: %d \n", (*argp).cantidadIngredientesExtra);
	printf("	Tipo: %s \n", (*argp).tipo);

struct svc_req *rqstp){
oSiguiente = (*hamburguesaActual)->nodoSiguiente->nodoSiguiente;
			
				result = TRUE;	
				break;			
			}
			else {
				(*hamburguesaActual)=(*hamburguesaActual)->nodoSiguiente;
			}	
		}
	}

	return &result;
}

nodo_factura *
mostrarfactura_1_svc(void *argp, struct svc_req *rqstp)
{
	static nodo_factura  result;

	/*
	 * insert server code here
	 */

	return &result;
}

bool_t *
pagarfactura_1_svc(char *argp, struct svc_req *rqstp)
{
	static bool_t  result;

	/*
	 * insert server code here
	 */

	return &result;
}

proxNodoHamburguesa *
listarhamburguesassistema_1_svc(void *argp, struct svc_req *rqstp)
{
	static proxNodoHamburguesa  result;

	/*
	 * insert server code here
	 */

	return &result;
}
